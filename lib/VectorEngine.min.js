var e,n,t,o,r,i,a,c,u,l,f,s,m,d,T,p,g,y=0;function v(){if(null!=n){let e=0;0!==y&&(e=(new Date).getTime()-y),y=(new Date).getTime(),r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT),n(e)}requestAnimationFrame(v)}function A(n,t,o,i,s,d,T,p){const g=new Float32Array(e.buffer,n,t);r.bufferData(r.ARRAY_BUFFER,g,r.DYNAMIC_DRAW),r.uniform1ui(a,T),r.uniform1f(c,d),r.uniform1f(u,s),r.uniform1f(l,o),r.uniform1f(f,i),r.vertexAttribPointer(m,2,r.FLOAT,!1,0,0),r.drawArrays(p,0,g.length/2)}function h(n){null!=d&&(null==g&&(g=new Uint8Array(e.buffer,d,100)),g[n.keyCode]=!0,console.log(`\n\tkeyPtr: ${d}\n\tcode: ${n.keyCode}\n\tkeyDownPos[event.code]: ${g[n.keyCode]}\n\t`))}function _(e){null!=g&&(g[e.keyCode]=!1)}let w;function b(n){null==w&&(console.log(`\n\t\t\tmouseXPtr: ${p}\n\t\t\t`),w=new Int32Array(e.buffer,p,8)),w[0]=n.offsetX,w[1]=n.offsetY,console.log(`\n\tevent.offsetX: ${n.offsetX}\n\tevent.offsetY: ${n.offsetY}\n\t`)}function R(e){e.preventDefault()}var V;function x(n){null==V&&(V=new Uint8Array(e.buffer,T,3)),V[n.which-1]=!0,n.preventDefault()}function k(n){null==V&&(V=new Uint8Array(e.buffer,T,3)),V[n.which-1]=!1,n.preventDefault()}function q(n){const t=e.buffer,o=new Uint32Array(t),r=n/4-2,i=o[r];if(1!==i)throw Error(`not a string index=${n} id=${i}`);const a=o[r+1];return new TextDecoder("utf-16").decode(t.slice(n,n+a))}var D,E=!1,F=new Float32Array(16384);function $(e,n,t,o,r,i){let a=D.createGain();return a.gain.setValueAtTime(0,D.currentTime),a.gain.linearRampToValueAtTime(r,D.currentTime+e),a.gain.linearRampToValueAtTime(1,D.currentTime+e+n),a.gain.setValueAtTime(1,D.currentTime+e+n+t),a.gain.linearRampToValueAtTime(0,D.currentTime+e+n+t+o),i.connect(a),a}function L(e,n,t,o){let r=0,i=(1-n)*e,a=D.createGain();for(a.gain.setValueAtTime(1,D.currentTime);r<t;)a.gain.setValueAtTime(1,D.currentTime+r+.98*i),a.gain.linearRampToValueAtTime(0,D.currentTime+r+i),a.gain.setValueAtTime(0,D.currentTime+r+.98*e),a.gain.linearRampToValueAtTime(1,D.currentTime+r+e),r+=e;return o.connect(a),a}function S(e){return 0===e?"square":1===e?"triangle":2===e?"sawtooth":3===e?"sine":(alert("invalid wave type"),"square")}function U(e,n,t){return t.frequency.linearRampToValueAtTime(e,D.currentTime+n),t}function B(e,n,t,o,r,i){return i.frequency.setValueAtTime(e,D.currentTime+t),1===r?i.frequency.linearRampToValueAtTime(e*n,D.currentTime+o):0===r?i.frequency.setValueAtTime(e*n,D.currentTime+t):2===r&&i.frequency.exponentialRampToValueAtTime(e*n,D.currentTime+o),i}function C(e,n,t,o,r){let i=D.createGain(),a=D.createOscillator();return a.type=S(e),a.frequency.setValueAtTime(n,D.currentTime),a.connect(i),a.start(D.currentTime+t),a.stop(D.currentTime+o),r.connect(i),i}function G(e,n,t){let o=D.createDelay();o.delayTime.value=e;D.createGain();return n.gain.value=n,t.connect(o),o.connect(feedback),feedback.connect(t),feedback}function P(e,n,t){let o=D.createBiquadFilter();return o.type="highpass",o.frequency.value=e,t.connect(o),o}function X(e,n,t,o=0){let r=D.createBiquadFilter();return r.type="lowpass",r.frequency.value=e,0!==o&&r.frequency.linearRampToValueAtTime(o,D.currentTime+n),t.connect(r),r}function Y(e,n,t,o,r,i,a,c,u,l,f,s,m,d,T,p,g,y,v,A,h,_,w,b,R){null==D&&(D=new AudioContext);const V=m+d+T+p;if(4===e){let e=function(){let e=D.createBufferSource(),n=D.createBuffer(1,16384,D.sampleRate);if(!1===E){for(var t=0;t<16384;t+=10){F[t]=2*Math.random()-1;for(var o=1;o<10;o++)F[t+o]=F[t]}E=!0}return n.getChannelData(0).set(F),e.buffer=n,e.loop=!0,e}();e.detune.setValueAtTime(100*w,D.currentTime),e.detune.linearRampToValueAtTime(100*b,D.currentTime+V);let n=D.createGain();n.gain.setValueAtTime(_,D.currentTime),e.connect(n);let t=n;s>0&&(t=P(s,0,t)),l>0&&(t=X(l,V,t,f)),y>0&&(t=L(y,v,V,t)),A>0&&(t=G(A,h,t)),i>0&&(t=C(u,c,a,V,t)),t=$(m,d,T,p,g,t);let o=D.createGain();return o.value=1,t.connect(o),o.connect(D.destination),e.start(),void e.stop(D.currentTime+V)}let x=function(e,n){var t=D.createOscillator();return t.type=S(n),t.frequency.setValueAtTime(e,D.currentTime),t}(n,e),k=x;0!=t?0!=o?(k=U(t,o,k),k=B(t,r,o,V,R,k)):k=U(t,V,k):0!=o&&(k=B(n,r,o,V,R,k)),s>0&&(k=P(s,0,k)),l>0&&(k=X(l,V,k,f));let q=D.createGain();q.gain.value=_,k.connect(q),k=q,k=$(m,d,T,p,g,k),y>0&&(k=L(y,v,V,k)),A>0&&(k=G(A,h,k)),i>0&&(k=C(u,c,a,V,k));let Y=D.createGain();Y.value=1,k.connect(Y),Y.connect(D.destination),x.start(),x.stop(D.currentTime+V)}function I(g,y,w,V=100){const D=document.getElementById(g);var E=.99*window.innerWidth,F=.99*window.innerHeight;E>F?(cnvs.width=F,cnvs.height=F):(cnvs.width=E,cnvs.height=E),e=new WebAssembly.Memory({initial:V}),o={env:{abort:(e,n,t,o)=>{console.log(`${t}:${o}`),console.log(`msg: ${q(e)}`),console.log(`file: ${q(n)}`)},memory:e,seed:Date.now},VectorEngine:{renderLineData:A,canvasWidth:D.width,canvasHeight:D.height,playSFX:Y,setInputPtrs:(e,n,t,o,r,i,a,c,u)=>{d=e,T=n,p=c},logf32:e=>console.log(`f32: ${e}`),logi32:e=>console.log(`i32: ${e}`)}},(async()=>{console.log(`wasm_file=${y}`),t=await WebAssembly.instantiateStreaming(fetch(y),o),n=t.instance.exports[w],requestAnimationFrame(v),D.addEventListener("mousemove",b),D.addEventListener("mousedown",x),D.addEventListener("mouseup",k),D.oncontextmenu=R,document.addEventListener("keyup",_),document.addEventListener("keydown",h)})();const $=(r=D.getContext("webgl2")).createShader(r.VERTEX_SHADER);r.shaderSource($,"#version 300 es\n  precision highp float;\n\n  uniform uint u_color;\n  uniform float u_scale;\n  uniform float u_rotation;\n  uniform float u_loop_x;\n  uniform float u_loop_y;\n\n  in vec2 position;\n  out vec4 c;\n  \n  void main() {\n    vec2 pos = (position * u_scale);\n\n    float cosine = cos(u_rotation);\n    float sine = sin(u_rotation);\n    float x = (cosine * pos.x) + (sine * pos.y);\n    float y = (cosine * pos.y) - (sine * pos.x);\n    pos.x = x + u_loop_x;\n    pos.y = y + u_loop_y;\n\n    gl_Position = vec4( pos, 0.0, 1.0 );\n    uint mask = uint(0xff); // byte mask\n\n    // convert 32-bit hexadecimal color to four float color\n    uint red = u_color >> 24;\n    uint green = (u_color >> 16) & mask;\n    uint blue = (u_color >> 8) & mask;\n    uint alpha = u_color & mask;\n\n    c = vec4( float(red) / 255.0, \n              float(green) / 255.0,\n              float(blue) / 255.0,\n              float(alpha) / 255.0 );\n  }\n"),r.compileShader($);const L=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(L,"#version 300 es\n  precision highp float;\n\n  in vec4 c;\n  out vec4 color;\n\n  void main() {\n    color = c;\n  }\n"),r.compileShader(L),i=r.createProgram(),r.attachShader(i,$),r.attachShader(i,L),r.linkProgram(i),r.useProgram(i),a=r.getUniformLocation(i,"u_color"),c=r.getUniformLocation(i,"u_scale"),u=r.getUniformLocation(i,"u_rotation"),l=r.getUniformLocation(i,"u_loop_x"),f=r.getUniformLocation(i,"u_loop_y"),s=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,s),m=r.getAttribLocation(i,"position"),r.enableVertexAttribArray(m)}export{I as runVectorGame};
