var $jscomp={scope:{},executeAsyncGenerator:function(a){function b(b){return a.next(b)}function c(b){return a.throw(b)}return new Promise(function(d,e){function f(a){a.done?d(a.value):Promise.resolve(a.value).then(b,c).then(f,e)}f(a.next())})}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(c.get||c.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var b=0;return $jscomp.iteratorPrototype(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();var b=a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.EXPOSE_ASYNC_EXECUTOR=!0;$jscomp.FORCE_POLYFILL_PROMISE=!1;
var module$Input_0={},V_COLOR_LINE_SHADER$$module$Input_0="#version 300 es\n  precision highp float;\n\n  uniform uint u_color;\n  uniform float u_scale;\n  uniform float u_rotation;\n  uniform float u_loop_x;\n  uniform float u_loop_y;\n\n  in vec2 position;\n  out vec4 c;\n  \n  void main() {\n    vec2 pos \x3d (position * u_scale);\n\n    float cosine \x3d cos(u_rotation);\n    float sine \x3d sin(u_rotation);\n    float x \x3d (cosine * pos.x) + (sine * pos.y);\n    float y \x3d (cosine * pos.y) - (sine * pos.x);\n    pos.x \x3d x + u_loop_x;\n    pos.y \x3d y + u_loop_y;\n\n    gl_Position \x3d vec4( pos, 0.0, 1.0 );\n    uint mask \x3d uint(0xff); // byte mask\n\n    // convert 32-bit hexadecimal color to four float color\n    uint red \x3d u_color \x3e\x3e 24;\n    uint green \x3d (u_color \x3e\x3e 16) \x26 mask;\n    uint blue \x3d (u_color \x3e\x3e 8) \x26 mask;\n    uint alpha \x3d u_color \x26 mask;\n\n    c \x3d vec4( float(red) / 255.0, \n              float(green) / 255.0,\n              float(blue) / 255.0,\n              float(alpha) / 255.0 );\n  }\n",F_SHADER$$module$Input_0=
"#version 300 es\n  precision highp float;\n\n  in vec4 c;\n  out vec4 color;\n\n  void main() {\n    color \x3d c;\n  }\n",memory$$module$Input_0,game_loop$$module$Input_0,wasm_obj$$module$Input_0,importObject$$module$Input_0,gl$$module$Input_0,color_line_program$$module$Input_0,color_location$$module$Input_0,scale_location$$module$Input_0,rotation_location$$module$Input_0,offset_x_location$$module$Input_0,offset_y_location$$module$Input_0,buffer$$module$Input_0,position_al$$module$Input_0,keyPtr$$module$Input_0,
mouseLeftDownPtr$$module$Input_0,mouseRightDownPtr$$module$Input_0,mouseMiddleDownPtr$$module$Input_0,mouseLeftUpPtr$$module$Input_0,mouseRightUpPtr$$module$Input_0,mouseMiddleUpPtr$$module$Input_0,mouseXPtr$$module$Input_0,mouseYPtr$$module$Input_0,lastTime$$module$Input_0=0;
function render$$module$Input_0(){if(null!=game_loop$$module$Input_0){var a=0;0!==lastTime$$module$Input_0&&(a=(new Date).getTime()-lastTime$$module$Input_0);lastTime$$module$Input_0=(new Date).getTime();clear$$module$Input_0();game_loop$$module$Input_0(a)}requestAnimationFrame(render$$module$Input_0)}function clear$$module$Input_0(){gl$$module$Input_0.clearColor(0,0,0,1);gl$$module$Input_0.clear(gl$$module$Input_0.COLOR_BUFFER_BIT)}
function renderLine$$module$Input_0(a,b,c,d,e,f,h,r){a=new Float32Array(memory$$module$Input_0.buffer,a,b);gl$$module$Input_0.bufferData(gl$$module$Input_0.ARRAY_BUFFER,a,gl$$module$Input_0.DYNAMIC_DRAW);gl$$module$Input_0.uniform1ui(color_location$$module$Input_0,h);gl$$module$Input_0.uniform1f(scale_location$$module$Input_0,f);gl$$module$Input_0.uniform1f(rotation_location$$module$Input_0,e);gl$$module$Input_0.uniform1f(offset_x_location$$module$Input_0,c);gl$$module$Input_0.uniform1f(offset_y_location$$module$Input_0,
d);gl$$module$Input_0.vertexAttribPointer(position_al$$module$Input_0,2,gl$$module$Input_0.FLOAT,!1,0,0);gl$$module$Input_0.drawArrays(r,0,a.length/2)}var keyDownPos$$module$Input_0;
function keyDown$$module$Input_0(a){null!=keyPtr$$module$Input_0&&(null==keyDownPos$$module$Input_0&&(keyDownPos$$module$Input_0=new Uint8Array(memory$$module$Input_0.buffer,keyPtr$$module$Input_0,100)),keyDownPos$$module$Input_0[a.keyCode]=!0,console.log("\n\tkeyPtr: "+keyPtr$$module$Input_0+"\n\tcode: "+a.keyCode+"\n\tkeyDownPos[event.code]: "+keyDownPos$$module$Input_0[a.keyCode]+"\n\t"))}
function keyUp$$module$Input_0(a){null!=keyDownPos$$module$Input_0&&(keyDownPos$$module$Input_0[a.keyCode]=!1)}var mousePtr$$module$Input_0;
function mouseMove$$module$Input_0(a){null==mousePtr$$module$Input_0&&(console.log("\n\t\t\tmouseXPtr: "+mouseXPtr$$module$Input_0+"\n\t\t\t"),mousePtr$$module$Input_0=new Int32Array(memory$$module$Input_0.buffer,mouseXPtr$$module$Input_0,8));mousePtr$$module$Input_0[0]=a.offsetX;mousePtr$$module$Input_0[1]=a.offsetY;console.log("\n\tevent.offsetX: "+a.offsetX+"\n\tevent.offsetY: "+a.offsetY+"\n\t")}function onContext$$module$Input_0(a){a.preventDefault()}var mousePos$$module$Input_0;
function mouseDown$$module$Input_0(a){null==mousePos$$module$Input_0&&(mousePos$$module$Input_0=new Uint8Array(memory$$module$Input_0.buffer,mouseLeftDownPtr$$module$Input_0,3));mousePos$$module$Input_0[a.which-1]=!0;a.preventDefault()}function mouseUp$$module$Input_0(a){null==mousePos$$module$Input_0&&(mousePos$$module$Input_0=new Uint8Array(memory$$module$Input_0.buffer,mouseLeftDownPtr$$module$Input_0,3));mousePos$$module$Input_0[a.which-1]=!1;a.preventDefault()}
function getString$$module$Input_0(a){var b=memory$$module$Input_0.buffer,c=new Uint32Array(b),d=a/4-2,e=c[d];if(1!==e)throw Error("not a string index\x3d"+a+" id\x3d"+e);c=c[d+1];return(new TextDecoder("utf-16")).decode(b.slice(a,a+c))}
var SQUARE_WAVE$$module$Input_0=0,TRIANGLE_WAVE$$module$Input_0=1,SAW_WAVE$$module$Input_0=2,SIN_WAVE$$module$Input_0=3,NOISE_WAVE$$module$Input_0=4,SLIDE_NONE$$module$Input_0=0,SLIDE_LIN$$module$Input_0=1,SLIDE_EXP$$module$Input_0=2,ACTX$$module$Input_0,noise_init$$module$Input_0=!1,noise_data$$module$Input_0=new Float32Array(16384),master_volume$$module$Input_0=1;
function envelope$$module$Input_0(a,b,c,d,e,f){var h=ACTX$$module$Input_0.createGain();h.gain.setValueAtTime(0,ACTX$$module$Input_0.currentTime);h.gain.linearRampToValueAtTime(e,ACTX$$module$Input_0.currentTime+a);h.gain.linearRampToValueAtTime(1,ACTX$$module$Input_0.currentTime+a+b);h.gain.setValueAtTime(1,ACTX$$module$Input_0.currentTime+a+b+c);h.gain.linearRampToValueAtTime(0,ACTX$$module$Input_0.currentTime+a+b+c+d);f.connect(h);return h}
function noiseNode$$module$Input_0(){var a=ACTX$$module$Input_0.createBufferSource(),b=ACTX$$module$Input_0.createBuffer(1,16384,ACTX$$module$Input_0.sampleRate);if(!1===noise_init$$module$Input_0){for(var c=0;16384>c;c+=10){noise_data$$module$Input_0[c]=2*Math.random()-1;for(var d=1;10>d;d++)noise_data$$module$Input_0[c+d]=noise_data$$module$Input_0[c]}noise_init$$module$Input_0=!0}b.getChannelData(0).set(noise_data$$module$Input_0);a.buffer=b;a.loop=!0;return a}
function dutyCycle$$module$Input_0(a,b,c,d){var e=0;b=(1-b)*a;var f=ACTX$$module$Input_0.createGain();for(f.gain.setValueAtTime(1,ACTX$$module$Input_0.currentTime);e<c;)f.gain.setValueAtTime(1,ACTX$$module$Input_0.currentTime+e+.98*b),f.gain.linearRampToValueAtTime(0,ACTX$$module$Input_0.currentTime+e+b),f.gain.setValueAtTime(0,ACTX$$module$Input_0.currentTime+e+.98*a),f.gain.linearRampToValueAtTime(1,ACTX$$module$Input_0.currentTime+e+a),e+=a;d.connect(f);return f}
function getOscType$$module$Input_0(a){if(a===SQUARE_WAVE$$module$Input_0)return"square";if(a===TRIANGLE_WAVE$$module$Input_0)return"triangle";if(a===SAW_WAVE$$module$Input_0)return"sawtooth";if(a===SIN_WAVE$$module$Input_0)return"sine";alert("invalid wave type");return"square"}function frequencySlide$$module$Input_0(a,b,c){c.frequency.linearRampToValueAtTime(a,ACTX$$module$Input_0.currentTime+b);return c}
function delayedFrequencySlide$$module$Input_0(a,b,c,d,e,f){f.frequency.setValueAtTime(a,ACTX$$module$Input_0.currentTime+c);e===SLIDE_LIN$$module$Input_0?f.frequency.linearRampToValueAtTime(a*b,ACTX$$module$Input_0.currentTime+d):e===SLIDE_NONE$$module$Input_0?f.frequency.setValueAtTime(a*b,ACTX$$module$Input_0.currentTime+c):e===SLIDE_EXP$$module$Input_0&&f.frequency.exponentialRampToValueAtTime(a*b,ACTX$$module$Input_0.currentTime+d);return f}
function oscillatorTone$$module$Input_0(a,b){var c=ACTX$$module$Input_0.createOscillator();c.type=getOscType$$module$Input_0(b);c.frequency.setValueAtTime(a,ACTX$$module$Input_0.currentTime);return c}
function vibrato$$module$Input_0(a,b,c,d,e){var f=ACTX$$module$Input_0.createGain(),h=ACTX$$module$Input_0.createOscillator();h.type=getOscType$$module$Input_0(a);h.frequency.setValueAtTime(b,ACTX$$module$Input_0.currentTime);h.connect(f);h.start(ACTX$$module$Input_0.currentTime+c);h.stop(ACTX$$module$Input_0.currentTime+d);e.connect(f);return f}
function flange$$module$Input_0(a,b,c){var d=ACTX$$module$Input_0.createDelay();d.delayTime.value=a;ACTX$$module$Input_0.createGain();b.gain.value=b;c.connect(d);d.connect(feedback);feedback.connect(c);return feedback}function highPassFilter$$module$Input_0(a,b,c){b=ACTX$$module$Input_0.createBiquadFilter();b.type="highpass";b.frequency.value=a;c.connect(b);return b}
function lowPassFilter$$module$Input_0(a,b,c,d){d=void 0===d?0:d;var e=ACTX$$module$Input_0.createBiquadFilter();e.type="lowpass";e.frequency.value=a;0!==d&&e.frequency.linearRampToValueAtTime(d,ACTX$$module$Input_0.currentTime+b);c.connect(e);return e}
function playSFX$$module$Input_0(a,b,c,d,e,f,h,r,y,m,z,t,n,p,q,x,A,u,B,v,C,k,w,g,D){null==ACTX$$module$Input_0&&(ACTX$$module$Input_0=new AudioContext);var l=n+p+q+x;a===NOISE_WAVE$$module$Input_0?(b=noiseNode$$module$Input_0(),b.detune.setValueAtTime(100*w,ACTX$$module$Input_0.currentTime),b.detune.linearRampToValueAtTime(100*g,ACTX$$module$Input_0.currentTime+l),c=ACTX$$module$Input_0.createGain(),c.gain.setValueAtTime(k,ACTX$$module$Input_0.currentTime),b.connect(c),k=c,0<t&&(k=highPassFilter$$module$Input_0(t,
l,k)),0<m&&(k=lowPassFilter$$module$Input_0(m,l,k,z)),0<u&&(k=dutyCycle$$module$Input_0(u,B,l,k)),0<v&&(k=flange$$module$Input_0(v,C,k)),0<f&&(k=vibrato$$module$Input_0(y,r,h,l,k)),k=envelope$$module$Input_0(n,p,q,x,A,k),f=ACTX$$module$Input_0.createGain(),f.value=master_volume$$module$Input_0,k.connect(f),f.connect(ACTX$$module$Input_0.destination),b.start(),b.stop(ACTX$$module$Input_0.currentTime+l)):(g=w=oscillatorTone$$module$Input_0(b,a),0!=c?0!=d?(g=frequencySlide$$module$Input_0(c,d,g),g=delayedFrequencySlide$$module$Input_0(c,
e,d,l,D,g)):g=frequencySlide$$module$Input_0(c,l,g):0!=d&&(g=delayedFrequencySlide$$module$Input_0(b,e,d,l,D,g)),0<t&&(g=highPassFilter$$module$Input_0(t,l,g)),0<m&&(g=lowPassFilter$$module$Input_0(m,l,g,z)),m=ACTX$$module$Input_0.createGain(),m.gain.value=k,g.connect(m),g=envelope$$module$Input_0(n,p,q,x,A,m),0<u&&(g=dutyCycle$$module$Input_0(u,B,l,g)),0<v&&(g=flange$$module$Input_0(v,C,g)),0<f&&(g=vibrato$$module$Input_0(y,r,h,l,g)),f=ACTX$$module$Input_0.createGain(),f.value=master_volume$$module$Input_0,
g.connect(f),f.connect(ACTX$$module$Input_0.destination),w.start(),w.stop(ACTX$$module$Input_0.currentTime+l))}
function runVectorGame$$module$Input_0(a,b,c,d){d=void 0===d?100:d;var e=document.getElementById(a);a=.99*window.innerWidth;var f=.99*window.innerHeight;a>f?(cnvs.width=f,cnvs.height=f):(cnvs.width=a,cnvs.height=a);memory$$module$Input_0=new WebAssembly.Memory({initial:d});importObject$$module$Input_0={env:{abort:function(a,b,c,d){console.log(c+":"+d);console.log("msg: "+getString$$module$Input_0(a));console.log("file: "+getString$$module$Input_0(b))},memory:memory$$module$Input_0,seed:Date.now},
VectorEngine:{renderLineData:renderLine$$module$Input_0,canvasWidth:e.width,canvasHeight:e.height,playSFX:playSFX$$module$Input_0,setInputPtrs:function(a,b,c,d,e,f,n,p,q){keyPtr$$module$Input_0=a;mouseLeftDownPtr$$module$Input_0=b;mouseRightDownPtr$$module$Input_0=c;mouseMiddleDownPtr$$module$Input_0=d;mouseLeftUpPtr$$module$Input_0=e;mouseRightUpPtr$$module$Input_0=f;mouseMiddleUpPtr$$module$Input_0=n;mouseXPtr$$module$Input_0=p;mouseYPtr$$module$Input_0=q},logf32:function(a){return console.log("f32: "+
a)},logi32:function(a){return console.log("i32: "+a)}}};(function(){return $jscomp.executeAsyncGenerator(function(){function a(a,h){for(;;)switch(d){case 0:return console.log("wasm_file\x3d"+b),d=1,{value:WebAssembly.instantiateStreaming(fetch(b),importObject$$module$Input_0),done:!1};case 1:if(void 0===h){d=2;break}d=-1;throw h;case 2:wasm_obj$$module$Input_0=f=a,game_loop$$module$Input_0=wasm_obj$$module$Input_0.instance.exports[c],requestAnimationFrame(render$$module$Input_0),e.addEventListener("mousemove",
mouseMove$$module$Input_0),e.addEventListener("mousedown",mouseDown$$module$Input_0),e.addEventListener("mouseup",mouseUp$$module$Input_0),e.oncontextmenu=onContext$$module$Input_0,document.addEventListener("keyup",keyUp$$module$Input_0),document.addEventListener("keydown",keyDown$$module$Input_0),d=-1;default:return{value:void 0,done:!0}}}var d=0,f,m={next:function(b){return a(b,void 0)},throw:function(b){return a(void 0,b)},return:function(a){throw Error("Not yet implemented");}};$jscomp.initSymbolIterator();
m[Symbol.iterator]=function(){return this};return m}())})();gl$$module$Input_0=e.getContext("webgl2");d=gl$$module$Input_0.createShader(gl$$module$Input_0.VERTEX_SHADER);gl$$module$Input_0.shaderSource(d,V_COLOR_LINE_SHADER$$module$Input_0);gl$$module$Input_0.compileShader(d);a=gl$$module$Input_0.createShader(gl$$module$Input_0.FRAGMENT_SHADER);gl$$module$Input_0.shaderSource(a,F_SHADER$$module$Input_0);gl$$module$Input_0.compileShader(a);color_line_program$$module$Input_0=gl$$module$Input_0.createProgram();
gl$$module$Input_0.attachShader(color_line_program$$module$Input_0,d);gl$$module$Input_0.attachShader(color_line_program$$module$Input_0,a);gl$$module$Input_0.linkProgram(color_line_program$$module$Input_0);gl$$module$Input_0.useProgram(color_line_program$$module$Input_0);color_location$$module$Input_0=gl$$module$Input_0.getUniformLocation(color_line_program$$module$Input_0,"u_color");scale_location$$module$Input_0=gl$$module$Input_0.getUniformLocation(color_line_program$$module$Input_0,"u_scale");
rotation_location$$module$Input_0=gl$$module$Input_0.getUniformLocation(color_line_program$$module$Input_0,"u_rotation");offset_x_location$$module$Input_0=gl$$module$Input_0.getUniformLocation(color_line_program$$module$Input_0,"u_loop_x");offset_y_location$$module$Input_0=gl$$module$Input_0.getUniformLocation(color_line_program$$module$Input_0,"u_loop_y");buffer$$module$Input_0=gl$$module$Input_0.createBuffer();gl$$module$Input_0.bindBuffer(gl$$module$Input_0.ARRAY_BUFFER,buffer$$module$Input_0);
position_al$$module$Input_0=gl$$module$Input_0.getAttribLocation(color_line_program$$module$Input_0,"position");gl$$module$Input_0.enableVertexAttribArray(position_al$$module$Input_0)}module$Input_0.runVectorGame=runVectorGame$$module$Input_0;